name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_PATH: /usr/lib/pkgconfig
  PUBLIC_STELLAR_NETWORK: local

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            runner/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup target add wasm32v1-none
      - name: Start Stellar Quickstart
        uses: stellar/quickstart@main
        with:
          tag: testing
          network: local
      # Debug step
      - name: Debug Stellar container
        run: |
          docker ps
          docker logs $(docker ps -q --filter ancestor=stellar/quickstart:testing)
          curl -v http://localhost:8000/rpc || true

      - run: sudo apt-get update && sudo apt-get install -y libudev-dev libdbus-1-dev pkg-config
      - name: Check for stellar-scaffold binary
        run: |
          if ! command -v stellar-scaffold &> /dev/null; then
            echo "stellar-scaffold not found, installing..."
            cargo install --git https://github.com/ahalabs/scaffold-stellar --branch main stellar-scaffold-cli
          else
            echo "stellar-scaffold already installed. Clear cache to force reinstall."
          fi
      - run: npm run lint
      - run: npx prettier . --check
      - name: Build clients before building the project
        run: STELLAR_SCAFFOLD_ENV=development stellar-scaffold build --build-clients
      - run: npm ci
      - run: npm run install:contracts
      - run: npm run build
      - name: Run tests
        run: npm test --if-present
